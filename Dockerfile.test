# syntax=docker.io/docker/dockerfile:1
# Dockerfile.test for running tests in CI environment

FROM node:23-alpine AS base

# Install dependencies including dev dependencies
FROM base AS deps
# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install dependencies based on the preferred package manager
COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* .npmrc* ./
RUN \
  if [ -f yarn.lock ]; then yarn; \
  elif [ -f package-lock.json ]; then npm install; \
  elif [ -f pnpm-lock.yaml ]; then corepack enable pnpm && pnpm install; \
  else echo "Lockfile not found." && exit 1; \
  fi

# Test image
FROM base AS test
WORKDIR /app

ENV NODE_ENV=test

# Copy dependencies
COPY --from=deps /app/node_modules ./node_modules

# Copy source code and test files
COPY . .

# Default command is to run tests, but this can be overridden
CMD ["npm", "test"]